"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/github/trends/route";
exports.ids = ["app/api/github/trends/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgithub%2Ftrends%2Froute&page=%2Fapi%2Fgithub%2Ftrends%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgithub%2Ftrends%2Froute.ts&appDir=C%3A%5CUsers%5Ckalya%5COneDrive%5CDesktop%5Cport%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckalya%5COneDrive%5CDesktop%5Cport&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgithub%2Ftrends%2Froute&page=%2Fapi%2Fgithub%2Ftrends%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgithub%2Ftrends%2Froute.ts&appDir=C%3A%5CUsers%5Ckalya%5COneDrive%5CDesktop%5Cport%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckalya%5COneDrive%5CDesktop%5Cport&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_kalya_OneDrive_Desktop_port_src_app_api_github_trends_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/github/trends/route.ts */ \"(rsc)/./src/app/api/github/trends/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/github/trends/route\",\n        pathname: \"/api/github/trends\",\n        filename: \"route\",\n        bundlePath: \"app/api/github/trends/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\kalya\\\\OneDrive\\\\Desktop\\\\port\\\\src\\\\app\\\\api\\\\github\\\\trends\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_kalya_OneDrive_Desktop_port_src_app_api_github_trends_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/github/trends/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnaXRodWIlMkZ0cmVuZHMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmdpdGh1YiUyRnRyZW5kcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmdpdGh1YiUyRnRyZW5kcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNrYWx5YSU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q3BvcnQlNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2thbHlhJTVDT25lRHJpdmUlNUNEZXNrdG9wJTVDcG9ydCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrQztBQUMvRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL2thbHlhbmJhdGh1bGEtcG9ydGZvbGlvLz80ZWJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGthbHlhXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxccG9ydFxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxnaXRodWJcXFxcdHJlbmRzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9naXRodWIvdHJlbmRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZ2l0aHViL3RyZW5kc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZ2l0aHViL3RyZW5kcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGthbHlhXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxccG9ydFxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxnaXRodWJcXFxcdHJlbmRzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2dpdGh1Yi90cmVuZHMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgithub%2Ftrends%2Froute&page=%2Fapi%2Fgithub%2Ftrends%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgithub%2Ftrends%2Froute.ts&appDir=C%3A%5CUsers%5Ckalya%5COneDrive%5CDesktop%5Cport%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckalya%5COneDrive%5CDesktop%5Cport&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/github/trends/route.ts":
/*!********************************************!*\
  !*** ./src/app/api/github/trends/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/github */ \"(rsc)/./src/lib/github.ts\");\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const page = parseInt(searchParams.get(\"page\") || \"1\", 10);\n        const perPage = 6;\n        const date = new Date();\n        date.setDate(date.getDate() - 7);\n        const formattedDate = date.toISOString().split(\"T\")[0];\n        const response = await _lib_github__WEBPACK_IMPORTED_MODULE_1__.githubService.octokit.search.repos({\n            q: `created:>${formattedDate}`,\n            sort: \"stars\",\n            order: \"desc\",\n            per_page: perPage,\n            page: page\n        });\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(response.data.items);\n    } catch (error) {\n        console.error(\"Error in /api/github/trends:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to fetch trending repositories\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9naXRodWIvdHJlbmRzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUNFO0FBRXRDLGVBQWVFLElBQUlDLE9BQWdCO0lBQ3hDLElBQUk7UUFDRixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlGLFFBQVFHLEdBQUc7UUFDNUMsTUFBTUMsT0FBT0MsU0FBU0osYUFBYUssR0FBRyxDQUFDLFdBQVcsS0FBSztRQUN2RCxNQUFNQyxVQUFVO1FBRWhCLE1BQU1DLE9BQU8sSUFBSUM7UUFDakJELEtBQUtFLE9BQU8sQ0FBQ0YsS0FBS0csT0FBTyxLQUFLO1FBQzlCLE1BQU1DLGdCQUFnQkosS0FBS0ssV0FBVyxHQUFHQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFFdEQsTUFBTUMsV0FBVyxNQUFNakIsc0RBQWFBLENBQUNrQixPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDO1lBQ3hEQyxHQUFHLENBQUMsU0FBUyxFQUFFUCxjQUFjLENBQUM7WUFDOUJRLE1BQU07WUFDTkMsT0FBTztZQUNQQyxVQUFVZjtZQUNWSCxNQUFNQTtRQUNSO1FBRUEsT0FBT1Asa0ZBQVlBLENBQUMwQixJQUFJLENBQUNSLFNBQVNTLElBQUksQ0FBQ0MsS0FBSztJQUM5QyxFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLGdDQUFnQ0E7UUFDOUMsT0FBTzdCLGtGQUFZQSxDQUFDMEIsSUFBSSxDQUFDO1lBQUVHLE9BQU87UUFBd0MsR0FBRztZQUFFRSxRQUFRO1FBQUk7SUFDN0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2thbHlhbmJhdGh1bGEtcG9ydGZvbGlvLy4vc3JjL2FwcC9hcGkvZ2l0aHViL3RyZW5kcy9yb3V0ZS50cz8yYzkzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuaW1wb3J0IHsgZ2l0aHViU2VydmljZSB9IGZyb20gJ0AvbGliL2dpdGh1Yic7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xyXG4gICAgY29uc3QgcGFnZSA9IHBhcnNlSW50KHNlYXJjaFBhcmFtcy5nZXQoJ3BhZ2UnKSB8fCAnMScsIDEwKTtcclxuICAgIGNvbnN0IHBlclBhZ2UgPSA2O1xyXG5cclxuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gNyk7XHJcbiAgICBjb25zdCBmb3JtYXR0ZWREYXRlID0gZGF0ZS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF07XHJcblxyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnaXRodWJTZXJ2aWNlLm9jdG9raXQuc2VhcmNoLnJlcG9zKHtcclxuICAgICAgcTogYGNyZWF0ZWQ6PiR7Zm9ybWF0dGVkRGF0ZX1gLFxyXG4gICAgICBzb3J0OiAnc3RhcnMnLFxyXG4gICAgICBvcmRlcjogJ2Rlc2MnLFxyXG4gICAgICBwZXJfcGFnZTogcGVyUGFnZSxcclxuICAgICAgcGFnZTogcGFnZVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHJlc3BvbnNlLmRhdGEuaXRlbXMpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiAvYXBpL2dpdGh1Yi90cmVuZHM6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdGYWlsZWQgdG8gZmV0Y2ggdHJlbmRpbmcgcmVwb3NpdG9yaWVzJyB9LCB7IHN0YXR1czogNTAwIH0pO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiZ2l0aHViU2VydmljZSIsIkdFVCIsInJlcXVlc3QiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJwYWdlIiwicGFyc2VJbnQiLCJnZXQiLCJwZXJQYWdlIiwiZGF0ZSIsIkRhdGUiLCJzZXREYXRlIiwiZ2V0RGF0ZSIsImZvcm1hdHRlZERhdGUiLCJ0b0lTT1N0cmluZyIsInNwbGl0IiwicmVzcG9uc2UiLCJvY3Rva2l0Iiwic2VhcmNoIiwicmVwb3MiLCJxIiwic29ydCIsIm9yZGVyIiwicGVyX3BhZ2UiLCJqc29uIiwiZGF0YSIsIml0ZW1zIiwiZXJyb3IiLCJjb25zb2xlIiwic3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/github/trends/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/github.ts":
/*!***************************!*\
  !*** ./src/lib/github.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   githubService: () => (/* binding */ githubService)\n/* harmony export */ });\n/* harmony import */ var _octokit_rest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @octokit/rest */ \"(rsc)/./node_modules/@octokit/rest/dist-src/index.js\");\n// import { Octokit } from '@octokit/rest';\n// import type { RestEndpointMethodTypes } from '@octokit/plugin-rest-endpoint-methods';\n// import * as dotenv from 'dotenv';\n// type UserResponse = RestEndpointMethodTypes[\"users\"][\"getByUsername\"][\"response\"];\n// type ReposResponse = RestEndpointMethodTypes[\"repos\"][\"listForUser\"][\"response\"];\n// type CommitsResponse = RestEndpointMethodTypes[\"repos\"][\"listCommits\"][\"response\"];\n// class GitHubService {\n//   private static instance: GitHubService;\n//   public readonly octokit: Octokit;\n//   private readonly MAX_RETRIES = 3;\n//   private readonly RETRY_DELAY = 1000; // 1 second\n//   private constructor() {\n//     const token = \"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\";\n//     console.log('GitHub token:', token); // Add this line to verify the token\n//     if (!token) {\n//       console.error('GitHub token is not set in environment variables');\n//       throw new Error('GitHub token is not set in environment variables');\n//     }\n//     this.octokit = new Octokit({\n//       auth: token,\n//     });\n//   }\n//   public static getInstance(): GitHubService {\n//     if (!GitHubService.instance) {\n//       GitHubService.instance = new GitHubService();\n//     }\n//     return GitHubService.instance;\n//   }\n//   private async retryOperation<T>(operation: () => Promise<T>): Promise<T> {\n//     let lastError: Error | null = null;\n//     for (let i = 0; i < this.MAX_RETRIES; i++) {\n//       try {\n//         return await operation();\n//       } catch (error: any) {\n//         console.error('GitHub API error:', error);\n//         lastError = error;\n//         if (error.status === 403) {\n//           // Rate limit exceeded, wait longer\n//           await new Promise(resolve => setTimeout(resolve, this.RETRY_DELAY * Math.pow(2, i)));\n//         } else {\n//           throw error;\n//         }\n//       }\n//     }\n//     throw lastError;\n//   }\n//   async getUserData(username: string): Promise<UserResponse> {\n//     console.log('Fetching user data for:', username); // Add this line to verify the username\n//     const data = await this.retryOperation(() => \n//       this.octokit.users.getByUsername({ username:\"kalyanbathula\" })\n//     );\n//     console.log('User Data:', data); // Add this line to verify the response\n//     return data;\n//   }\n//   async getRepositories(username: string = 'kalyanbathula', options: any = {}): Promise<ReposResponse> {\n//     console.log('Fetching repositories for:', username); // Add this line to verify the username\n//     const data = await this.retryOperation(() => \n//       this.octokit.repos.listForUser({ \n//         username: 'kalyanbathula', // Hardcoded username\n//         per_page: 100, \n//         sort: 'updated', \n//         type: 'all', \n//         ...options \n//       })\n//     );\n//     console.log('Repositories Data:', data); // Add this line to verify the response\n//     return data;\n// }\n//   async getRepositoryCommits(owner: string, repo: string, options: any = {}): Promise<CommitsResponse> {\n//     console.log('Fetching commits for:', owner, repo); // Add this line to verify the owner and repo\n//     const data = await this.retryOperation(() => \n//       this.octokit.repos.listCommits({ owner, repo, ...options })\n//     );\n//     console.log('Commits Data:', data); // Add this line to verify the response\n//     return data;\n//   }\n//   async isTokenValid(): Promise<boolean> {\n//     console.log('isTokenValid method called'); // Add this line\n//     try {\n//       const response = await this.octokit.users.getAuthenticated();\n//       console.log(response);\n//       console.log('GitHub Authentication Success:', response.data.login);\n//       return true;\n//     } catch (error) {\n//       console.error('GitHub token validation error:', error);\n//       return false;\n//     }\n//   }\n// }\n// export const githubService = GitHubService.getInstance();\n\nclass GitHubService {\n    constructor(){\n        this.MAX_RETRIES = 3;\n        this.RETRY_DELAY = 1000 // 1 second\n        ;\n        this.cache = {} // Cache object\n        ;\n        const token = \"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\";\n        console.log(\"GitHub token:\", token); // Add this line to verify the token\n        if (!token) {\n            console.error(\"GitHub token is not set in environment variables\");\n            throw new Error(\"GitHub token is not set in environment variables\");\n        }\n        this.octokit = new _octokit_rest__WEBPACK_IMPORTED_MODULE_0__.Octokit({\n            auth: token\n        });\n    }\n    static getInstance() {\n        if (!GitHubService.instance) {\n            GitHubService.instance = new GitHubService();\n        }\n        return GitHubService.instance;\n    }\n    async retryOperation(operation) {\n        let lastError = null;\n        for(let i = 0; i < this.MAX_RETRIES; i++){\n            try {\n                return await operation();\n            } catch (error) {\n                console.error(\"GitHub API error:\", error);\n                lastError = error;\n                if (error.status === 403) {\n                    // Rate limit exceeded, wait longer\n                    await new Promise((resolve)=>setTimeout(resolve, this.RETRY_DELAY * Math.pow(2, i)));\n                } else {\n                    throw error;\n                }\n            }\n        }\n        throw lastError;\n    }\n    getCachedData(key) {\n        const cached = this.cache[key];\n        if (cached && Date.now() - cached.timestamp < 3600000) {\n            return cached.data;\n        }\n        return null;\n    }\n    setCachedData(key, data) {\n        this.cache[key] = {\n            data,\n            timestamp: Date.now()\n        };\n    }\n    async getUserData(username) {\n        const cacheKey = `user_${username}`;\n        const cachedData = this.getCachedData(cacheKey);\n        if (cachedData) {\n            console.log(\"Returning cached user data for:\", username);\n            return cachedData;\n        }\n        console.log(\"Fetching user data for:\", username); // Add this line to verify the username\n        const data = await this.retryOperation(()=>this.octokit.users.getByUsername({\n                username\n            }));\n        console.log(\"User Data:\", data); // Add this line to verify the response\n        this.setCachedData(cacheKey, data);\n        return data;\n    }\n    async getRepositories(username = \"kalyanbathula\", options = {}) {\n        const cacheKey = `repos_${username}`;\n        const cachedData = this.getCachedData(cacheKey);\n        if (cachedData) {\n            console.log(\"Returning cached repositories data for:\", username);\n            return cachedData;\n        }\n        console.log(\"Fetching repositories for:\", username); // Add this line to verify the username\n        const data = await this.retryOperation(()=>this.octokit.repos.listForUser({\n                username: \"kalyanbathula\",\n                per_page: 100,\n                sort: \"updated\",\n                type: \"all\",\n                ...options\n            }));\n        console.log(\"Repositories Data:\", data); // Add this line to verify the response\n        this.setCachedData(cacheKey, data);\n        return data;\n    }\n    async getRepositoryCommits(owner, repo, options = {}) {\n        const cacheKey = `commits_${owner}_${repo}`;\n        const cachedData = this.getCachedData(cacheKey);\n        if (cachedData) {\n            console.log(\"Returning cached commits data for:\", owner, repo);\n            return cachedData;\n        }\n        console.log(\"Fetching commits for:\", owner, repo); // Add this line to verify the owner and repo\n        const data = await this.retryOperation(()=>this.octokit.repos.listCommits({\n                owner,\n                repo,\n                ...options\n            }));\n        console.log(\"Commits Data:\", data); // Add this line to verify the response\n        this.setCachedData(cacheKey, data);\n        return data;\n    }\n    async isTokenValid() {\n        console.log(\"isTokenValid method called\"); // Add this line\n        try {\n            const response = await this.octokit.users.getAuthenticated();\n            console.log(response);\n            console.log(\"GitHub Authentication Success:\", response.data.login);\n            return true;\n        } catch (error) {\n            console.error(\"GitHub token validation error:\", error);\n            return false;\n        }\n    }\n}\nconst githubService = GitHubService.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/github.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@octokit","vendor-chunks/fast-content-type-parse","vendor-chunks/before-after-hook","vendor-chunks/universal-user-agent"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgithub%2Ftrends%2Froute&page=%2Fapi%2Fgithub%2Ftrends%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgithub%2Ftrends%2Froute.ts&appDir=C%3A%5CUsers%5Ckalya%5COneDrive%5CDesktop%5Cport%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckalya%5COneDrive%5CDesktop%5Cport&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();