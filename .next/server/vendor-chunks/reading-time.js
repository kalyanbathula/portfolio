"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/reading-time";
exports.ids = ["vendor-chunks/reading-time"];
exports.modules = {

/***/ "(rsc)/./node_modules/reading-time/index.js":
/*!********************************************!*\
  !*** ./node_modules/reading-time/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports[\"default\"] = module.exports = __webpack_require__(/*! ./lib/reading-time */ \"(rsc)/./node_modules/reading-time/lib/reading-time.js\");\nmodule.exports.readingTimeStream = __webpack_require__(/*! ./lib/stream */ \"(rsc)/./node_modules/reading-time/lib/stream.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhZGluZy10aW1lL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQUEseUJBQXNCLEdBQUdBLHVIQUF5QjtBQUNsREEsNkhBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2FseWFuYmF0aHVsYS1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcmVhZGluZy10aW1lL2luZGV4LmpzP2FjMTIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvcmVhZGluZy10aW1lJylcbm1vZHVsZS5leHBvcnRzLnJlYWRpbmdUaW1lU3RyZWFtID0gcmVxdWlyZSgnLi9saWIvc3RyZWFtJylcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZGVmYXVsdCIsInJlcXVpcmUiLCJyZWFkaW5nVGltZVN0cmVhbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/reading-time/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/reading-time/lib/reading-time.js":
/*!*******************************************************!*\
  !*** ./node_modules/reading-time/lib/reading-time.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */ \n/**\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\n */ /**\n * @param {number} number\n * @param {number[][]} arrayOfRanges\n */ function codeIsInRanges(number, arrayOfRanges) {\n    return arrayOfRanges.some(([lowerBound, upperBound])=>lowerBound <= number && number <= upperBound);\n}\n/**\n * @type {WordBoundFunction}\n */ function isCJK(c) {\n    if (\"string\" !== typeof c) {\n        return false;\n    }\n    const charCode = c.charCodeAt(0);\n    // Help wanted!\n    // This should be good for most cases, but if you find it unsatisfactory\n    // (e.g. some other language where each character should be standalone words),\n    // contributions welcome!\n    return codeIsInRanges(charCode, [\n        // Hiragana (Katakana not included on purpose,\n        // context: https://github.com/ngryman/reading-time/pull/35#issuecomment-853364526)\n        // If you think Katakana should be included and have solid reasons, improvement is welcomed\n        [\n            0x3040,\n            0x309f\n        ],\n        // CJK Unified ideographs\n        [\n            0x4e00,\n            0x9fff\n        ],\n        // Hangul\n        [\n            0xac00,\n            0xd7a3\n        ],\n        // CJK extensions\n        [\n            0x20000,\n            0x2ebe0\n        ]\n    ]);\n}\n/**\n * @type {WordBoundFunction}\n */ function isAnsiWordBound(c) {\n    return \" \\n\\r\t\".includes(c);\n}\n/**\n * @type {WordBoundFunction}\n */ function isPunctuation(c) {\n    if (\"string\" !== typeof c) {\n        return false;\n    }\n    const charCode = c.charCodeAt(0);\n    return codeIsInRanges(charCode, [\n        [\n            0x21,\n            0x2f\n        ],\n        [\n            0x3a,\n            0x40\n        ],\n        [\n            0x5b,\n            0x60\n        ],\n        [\n            0x7b,\n            0x7e\n        ],\n        // CJK Symbols and Punctuation\n        [\n            0x3000,\n            0x303f\n        ],\n        // Full-width ASCII punctuation variants\n        [\n            0xff00,\n            0xffef\n        ]\n    ]);\n}\n/**\n * @type {import('reading-time').default}\n */ function readingTime(text, options = {}) {\n    let words = 0, start = 0, end = text.length - 1;\n    // use provided value if available\n    const wordsPerMinute = options.wordsPerMinute || 200;\n    // use provided function if available\n    const isWordBound = options.wordBound || isAnsiWordBound;\n    // fetch bounds\n    while(isWordBound(text[start]))start++;\n    while(isWordBound(text[end]))end--;\n    // Add a trailing word bound to make handling edges more convenient\n    const normalizedText = `${text}\\n`;\n    // calculate the number of words\n    for(let i = start; i <= end; i++){\n        // A CJK character is a always word;\n        // A non-word bound followed by a word bound / CJK is the end of a word.\n        if (isCJK(normalizedText[i]) || !isWordBound(normalizedText[i]) && (isWordBound(normalizedText[i + 1]) || isCJK(normalizedText[i + 1]))) {\n            words++;\n        }\n        // In case of CJK followed by punctuations, those characters have to be eaten as well\n        if (isCJK(normalizedText[i])) {\n            while(i <= end && (isPunctuation(normalizedText[i + 1]) || isWordBound(normalizedText[i + 1]))){\n                i++;\n            }\n        }\n    }\n    // reading time stats\n    const minutes = words / wordsPerMinute;\n    // Math.round used to resolve floating point funkyness\n    //   http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n    const time = Math.round(minutes * 60 * 1000);\n    const displayed = Math.ceil(minutes.toFixed(2));\n    return {\n        text: displayed + \" min read\",\n        minutes: minutes,\n        time: time,\n        words: words\n    };\n}\n/**\n * Export\n */ module.exports = readingTime;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/reading-time/lib/reading-time.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/reading-time/lib/stream.js":
/*!*************************************************!*\
  !*** ./node_modules/reading-time/lib/stream.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */ \n/**\n * Module dependencies.\n */ const readingTime = __webpack_require__(/*! ./reading-time */ \"(rsc)/./node_modules/reading-time/lib/reading-time.js\");\nconst Transform = (__webpack_require__(/*! stream */ \"stream\").Transform);\nconst util = __webpack_require__(/*! util */ \"util\");\n/**\n * @typedef {import('reading-time').Options} Options\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\n * @typedef {import('reading-time').readingTimeStream} ReadingTimeStream\n * @typedef {import('stream').TransformCallback} TransformCallback\n */ /**\n * @param {Options} options\n * @returns {ReadingTimeStream}\n */ function ReadingTimeStream(options) {\n    // allow use without new\n    if (!(this instanceof ReadingTimeStream)) {\n        return new ReadingTimeStream(options);\n    }\n    Transform.call(this, {\n        objectMode: true\n    });\n    this.options = options || {};\n    this.stats = {\n        minutes: 0,\n        time: 0,\n        words: 0\n    };\n}\nutil.inherits(ReadingTimeStream, Transform);\n/**\n * @param {Buffer} chunk\n * @param {BufferEncoding} encoding\n * @param {TransformCallback} callback\n */ ReadingTimeStream.prototype._transform = function(chunk, encoding, callback) {\n    const stats = readingTime(chunk.toString(encoding), this.options);\n    this.stats.minutes += stats.minutes;\n    this.stats.time += stats.time;\n    this.stats.words += stats.words;\n    callback();\n};\n/**\n * @param {TransformCallback} callback\n */ ReadingTimeStream.prototype._flush = function(callback) {\n    this.stats.text = Math.ceil(this.stats.minutes.toFixed(2)) + \" min read\";\n    this.push(this.stats);\n    callback();\n};\n/**\n * Export\n */ module.exports = ReadingTimeStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhZGluZy10aW1lL2xpYi9zdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Q0FJQyxHQUVEO0FBRUE7O0NBRUMsR0FDRCxNQUFNQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUM1QixNQUFNQyxZQUFZRCx1REFBMkI7QUFDN0MsTUFBTUUsT0FBT0YsbUJBQU9BLENBQUM7QUFFckI7Ozs7O0NBS0MsR0FFRDs7O0NBR0MsR0FDRCxTQUFTRyxrQkFBa0JDLE9BQU87SUFDaEMsd0JBQXdCO0lBQ3hCLElBQUksQ0FBRSxLQUFJLFlBQVlELGlCQUFnQixHQUFJO1FBQ3hDLE9BQU8sSUFBSUEsa0JBQWtCQztJQUMvQjtJQUVBSCxVQUFVSSxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQUVDLFlBQVk7SUFBSztJQUV4QyxJQUFJLENBQUNGLE9BQU8sR0FBR0EsV0FBVyxDQUFDO0lBQzNCLElBQUksQ0FBQ0csS0FBSyxHQUFHO1FBQ1hDLFNBQVM7UUFDVEMsTUFBTTtRQUNOQyxPQUFPO0lBQ1Q7QUFDRjtBQUNBUixLQUFLUyxRQUFRLENBQUNSLG1CQUFtQkY7QUFFakM7Ozs7Q0FJQyxHQUNERSxrQkFBa0JTLFNBQVMsQ0FBQ0MsVUFBVSxHQUFHLFNBQVNDLEtBQUssRUFBRUMsUUFBUSxFQUFFQyxRQUFRO0lBQ3pFLE1BQU1ULFFBQVFSLFlBQVllLE1BQU1HLFFBQVEsQ0FBQ0YsV0FBVyxJQUFJLENBQUNYLE9BQU87SUFFaEUsSUFBSSxDQUFDRyxLQUFLLENBQUNDLE9BQU8sSUFBSUQsTUFBTUMsT0FBTztJQUNuQyxJQUFJLENBQUNELEtBQUssQ0FBQ0UsSUFBSSxJQUFJRixNQUFNRSxJQUFJO0lBQzdCLElBQUksQ0FBQ0YsS0FBSyxDQUFDRyxLQUFLLElBQUlILE1BQU1HLEtBQUs7SUFFL0JNO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNEYixrQkFBa0JTLFNBQVMsQ0FBQ00sTUFBTSxHQUFHLFNBQVNGLFFBQVE7SUFDcEQsSUFBSSxDQUFDVCxLQUFLLENBQUNZLElBQUksR0FBR0MsS0FBS0MsSUFBSSxDQUFDLElBQUksQ0FBQ2QsS0FBSyxDQUFDQyxPQUFPLENBQUNjLE9BQU8sQ0FBQyxNQUFNO0lBRTdELElBQUksQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQ2hCLEtBQUs7SUFDcEJTO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNEUSxPQUFPQyxPQUFPLEdBQUd0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2thbHlhbmJhdGh1bGEtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3JlYWRpbmctdGltZS9saWIvc3RyZWFtLmpzP2MwODUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiByZWFkaW5nLXRpbWVcbiAqIENvcHlyaWdodCAoYykgTmljb2xhcyBHcnltYW4gPG5ncnltYW5AZ21haWwuY29tPlxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuY29uc3QgcmVhZGluZ1RpbWUgPSByZXF1aXJlKCcuL3JlYWRpbmctdGltZScpXG5jb25zdCBUcmFuc2Zvcm0gPSByZXF1aXJlKCdzdHJlYW0nKS5UcmFuc2Zvcm1cbmNvbnN0IHV0aWwgPSByZXF1aXJlKCd1dGlsJylcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdyZWFkaW5nLXRpbWUnKS5PcHRpb25zfSBPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdyZWFkaW5nLXRpbWUnKS5PcHRpb25zWyd3b3JkQm91bmQnXX0gV29yZEJvdW5kRnVuY3Rpb25cbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3JlYWRpbmctdGltZScpLnJlYWRpbmdUaW1lU3RyZWFtfSBSZWFkaW5nVGltZVN0cmVhbVxuICogQHR5cGVkZWYge2ltcG9ydCgnc3RyZWFtJykuVHJhbnNmb3JtQ2FsbGJhY2t9IFRyYW5zZm9ybUNhbGxiYWNrXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge09wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtSZWFkaW5nVGltZVN0cmVhbX1cbiAqL1xuZnVuY3Rpb24gUmVhZGluZ1RpbWVTdHJlYW0ob3B0aW9ucykge1xuICAvLyBhbGxvdyB1c2Ugd2l0aG91dCBuZXdcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFJlYWRpbmdUaW1lU3RyZWFtKSkge1xuICAgIHJldHVybiBuZXcgUmVhZGluZ1RpbWVTdHJlYW0ob3B0aW9ucylcbiAgfVxuXG4gIFRyYW5zZm9ybS5jYWxsKHRoaXMsIHsgb2JqZWN0TW9kZTogdHJ1ZSB9KVxuXG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge31cbiAgdGhpcy5zdGF0cyA9IHtcbiAgICBtaW51dGVzOiAwLFxuICAgIHRpbWU6IDAsXG4gICAgd29yZHM6IDBcbiAgfVxufVxudXRpbC5pbmhlcml0cyhSZWFkaW5nVGltZVN0cmVhbSwgVHJhbnNmb3JtKVxuXG4vKipcbiAqIEBwYXJhbSB7QnVmZmVyfSBjaHVua1xuICogQHBhcmFtIHtCdWZmZXJFbmNvZGluZ30gZW5jb2RpbmdcbiAqIEBwYXJhbSB7VHJhbnNmb3JtQ2FsbGJhY2t9IGNhbGxiYWNrXG4gKi9cblJlYWRpbmdUaW1lU3RyZWFtLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24oY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICBjb25zdCBzdGF0cyA9IHJlYWRpbmdUaW1lKGNodW5rLnRvU3RyaW5nKGVuY29kaW5nKSwgdGhpcy5vcHRpb25zKVxuXG4gIHRoaXMuc3RhdHMubWludXRlcyArPSBzdGF0cy5taW51dGVzXG4gIHRoaXMuc3RhdHMudGltZSArPSBzdGF0cy50aW1lXG4gIHRoaXMuc3RhdHMud29yZHMgKz0gc3RhdHMud29yZHNcblxuICBjYWxsYmFjaygpXG59XG5cbi8qKlxuICogQHBhcmFtIHtUcmFuc2Zvcm1DYWxsYmFja30gY2FsbGJhY2tcbiAqL1xuUmVhZGluZ1RpbWVTdHJlYW0ucHJvdG90eXBlLl9mbHVzaCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHRoaXMuc3RhdHMudGV4dCA9IE1hdGguY2VpbCh0aGlzLnN0YXRzLm1pbnV0ZXMudG9GaXhlZCgyKSkgKyAnIG1pbiByZWFkJ1xuXG4gIHRoaXMucHVzaCh0aGlzLnN0YXRzKVxuICBjYWxsYmFjaygpXG59XG5cbi8qKlxuICogRXhwb3J0XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gUmVhZGluZ1RpbWVTdHJlYW1cbiJdLCJuYW1lcyI6WyJyZWFkaW5nVGltZSIsInJlcXVpcmUiLCJUcmFuc2Zvcm0iLCJ1dGlsIiwiUmVhZGluZ1RpbWVTdHJlYW0iLCJvcHRpb25zIiwiY2FsbCIsIm9iamVjdE1vZGUiLCJzdGF0cyIsIm1pbnV0ZXMiLCJ0aW1lIiwid29yZHMiLCJpbmhlcml0cyIsInByb3RvdHlwZSIsIl90cmFuc2Zvcm0iLCJjaHVuayIsImVuY29kaW5nIiwiY2FsbGJhY2siLCJ0b1N0cmluZyIsIl9mbHVzaCIsInRleHQiLCJNYXRoIiwiY2VpbCIsInRvRml4ZWQiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/reading-time/lib/stream.js\n");

/***/ })

};
;